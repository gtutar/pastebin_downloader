#[[_____________________________________________________________________________________________________________________
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄▄▄▄▄░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄██████████▄▄░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄██████░█░██████▄░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄████████░█░████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████████░█░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄█████████░█░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████████████████▄░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄████░░░░░▀█▄█▀░░░░░████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄█████░░░░░░█▄█░░░░░░█████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄████████▄▄▄█████▄▄▄████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄████▀███████████████████▀████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▀██████████░██████████▀████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████▀██████████░█░█▀████████▀████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███▀▀░░░▀▀█▀█░█░█░█░█▀█▀▀░░░▀▀███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▀░░░░░░░░░░█░█░█░█░█░░░░░░░░░░▀░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▀███████▀░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▀▀█▀▀░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
_______________________________________________________________________________________ <CMakeList for C++ / Executable>

Project Name    : pastebin_downloader
Filename        : /CMakeLists.txt
Date - Time     : 13/01/2024 - 08:43
Coded by        : tvtλrkλmon
Description     : CMakelists for pastebin_downloader
______________________________________________________________________________________________________________________]]

cmake_minimum_required(VERSION 3.22) # ................................................................... CMAKE Version

project (pastebin_downloader) # ........................................................................... Project Name

set(CMAKE_CXX_STANDARD 17) # ......................................................................... Language Standard

set(CMAKE_VERBOSE_MAKEFILE ON) # ...................................................................... Verbose [ON/OFF]

set(CMAKE_SYSTEM_NAME Windows) # ........................................................................... System Name

# ....................................................................................................... Cross Compiler

find_program(CMAKE_CXX_COMPILER x86_64-w64-mingw32-c++)
if(CMAKE_CXX_COMPILER)
    message(STATUS "Found C++ Compiler: ${CMAKE_CXX_COMPILER}")
else()
    message(FATAL_ERROR "C++ Compiler not found")
endif()

set(CMAKE_CXX_COMPILER "x86_64-w64-mingw32-c++") # ....................................................C++ Compiler Name

# ............................................................................................................ Libraries

find_package(CURL REQUIRED)
if(CURL_FOUND)
    message(STATUS "Found CURL: ${CURL_INCLUDE_DIRS}")
else()
    message(FATAL_ERROR "CURL not found")
endif()

# ......................................................................................................................


# .......................................................................................................... Executables

add_executable(pastebin_downloader main.cpp)

# ......................................................................................................................


# ....................................................................................................... Link Libraries

target_link_libraries(pastebin_downloader ${CURL_LIBRARIES}) #your environment may require to install curl, please check
target_include_directories(pastebin_downloader PRIVATE ${CURL_INCLUDE_DIRS}) #include directories for curl

# ......................................................................................................................


# .............................................................................................................. Testing
#[[
include(CTest)
enable_testing()
if(BUILD_TESTING)
   add_subdirectory(TEST)
endif()

add_test()
set(CTEST_NIGHTLY_START_TIME "01:00:00 UTC")
set(CTEST_SUBMIT_URL "TEST_SERVER")

set(CTEST_USE_LAUNCHERS 1)
]]
# ......................................................................................................................
#                                                         EOF
# ......................................................................................................................